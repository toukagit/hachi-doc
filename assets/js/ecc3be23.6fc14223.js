"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5497],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=c(n),d=a,f=g["".concat(s,".").concat(d)]||g[d]||p[d]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7280:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Other functions",sidebar_label:"Other functions",description:"",sidebar_position:3},s=void 0,c={unversionedId:"other",id:"version-4.0.0/other",title:"Other functions",description:"",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-4.0.0/other.md",sourceDirName:".",slug:"/other",permalink:"/hachi-doc/other",tags:[],version:"4.0.0",sidebarPosition:3,frontMatter:{title:"Other functions",sidebar_label:"Other functions",description:"",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Account system",permalink:"/hachi-doc/login"},next:{title:"For iOS",permalink:"/hachi-doc/sdk-projectsettings/sdk-projectsettings-ios"}},u={},p=[{value:"Review",id:"review",level:2},{value:"Vibration",id:"vibration",level:2},{value:"Gets the current user source",id:"gets-the-current-user-source",level:2},{value:"Firebase activates the callback",id:"firebase-activates-the-callback",level:2},{value:"Privacy protocol interface",id:"privacy-protocol-interface",level:2},{value:"Delete all SDK-related files",id:"delete-all-sdk-related-files",level:2},{value:"Sensitive word interface",id:"sensitive-word-interface",level:2},{value:"Push notification\uff08v2.3.5 new\uff09",id:"push-notificationv235-new",level:2},{value:"Multilingual translation interface (v3.5.6 new)",id:"multilingual-translation-interface-v356-new",level:2},{value:"Get the URL interface for cloud storage save (v4.0.1 new)",id:"get-the-url-interface-for-cloud-storage-save-v401-new",level:2},{value:"Get the URL interface for cloud storage details (v4.0.1 new)",id:"get-the-url-interface-for-cloud-storage-details-v401-new",level:2}],g={toc:p};function d(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},g,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"review"},"Review"),(0,i.kt)("p",null,"Call to pop-up Google/Apple system review box."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"HachiMgr.Instance.OpenStoreReview();\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"}," Google reviews need to be sent to the Google background to pop up. ",(0,i.kt)("br",null),"\nApple needs to review before it can pop up reviews, and reviews cannot pop up on TestFlight. ",(0,i.kt)("br",null))),(0,i.kt)("h2",{id:"vibration"},"Vibration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"// Vibration strength: 0: slight 1: moderate 2: severe\n// Vibration time: 0 ~ 1\nHachiMgr.Instance.TriggerHapticFeedback(1,0.5f);\n")),(0,i.kt)("h2",{id:"gets-the-current-user-source"},"Gets the current user source"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'void Start()\n{\n        HachiMgr.Instance.RegisterUserAttributionHandler(UserSourceListenerCallback);\n}\n    \nprivate void UserSourceListenerCallback(bool isOrganic, string network)\n{\n    HMDebugger.LogDebug("SetUserSourceListenerCallback isOrganic:" + isOrganic + "network:" + network);\n}\n')),(0,i.kt)("p",null,"User source callback, bool: true natural user false unnatural user"),(0,i.kt)("h2",{id:"firebase-activates-the-callback"},"Firebase activates the callback"),(0,i.kt)("p",null,"Must be set before SDK initialization; In this callback, you can obtain the latest remote online parameters."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'HachiMgr.Instance.SetFirebaseFetchDataAsyncSuccess = (result)=> {\n    \n    // result = true The activation succeeds, false the activation fails\n    HMDebugger.LogDebug("Firebase fetch remote config result:"+result);\n    \n};\n')),(0,i.kt)("h2",{id:"privacy-protocol-interface"},"Privacy protocol interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"HachiMgr.Instance.OpenPrivacyPolicy();\n\n")),(0,i.kt)("h2",{id:"delete-all-sdk-related-files"},"Delete all SDK-related files"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(4684).Z,width:"954",height:"368"})),(0,i.kt)("p",null,"After clicking, all SDK files will be removed. If the following error occurs when you reimport SDK again, please restart unity",(0,i.kt)("br",null)),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(8367).Z,width:"2532",height:"424"})),(0,i.kt)("h2",{id:"sensitive-word-interface"},"Sensitive word interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'\npublic enum SensitiveType\n{\n    //1: Nickname (Short text)\n    //2: Chat (long text)\n    //3: International business multilingual\n    NickName = 1,\n    Chat = 2,\n    Global = 3\n    \n}\n\npublic enum SensitiveAppType\n{\n    //0: Domestic app\n    //1: Wechat mini program\n    app = 0,\n    wx_app = 1\n}\n\nHachiMgr.Instance.CheckSensitiveWords("test title",HMSensitive.SensitiveType.Global, (result, content) =>\n {\n\n     if (result)\n     {\n         // Does not contain sensitive words\n     }\n     else\n     {\n         // Contains sensitive words, content is the text after removing sensitive words, sensitive words will be replaced by the symbol *\n     }\n\n },HMSensitive.SensitiveAppType.app);\n\n')),(0,i.kt)("h2",{id:"push-notificationv235-new"},"Push notification\uff08v2.3.5 new\uff09"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Request notification rights")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"HachiMgr.Instance.RequestNotificationPermission();\n")),(0,i.kt)("p",null,"When this interface is invoked, the SDK requests notification rights."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Register notification callback(optional)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'\n// Return the registration token of the current device notification\nHachiMgr.Instance.RegisterNotificationTokenReceived += OnReveiveNotificationToken;\n\n\n// Return the Custom data configured in the firebase background. The custom data is returned as a dictionary.\nHachiMgr.Instance.RegisterNotificationOnMessageReceived += OnMessageReceive;\n\n\nprivate void OnReveiveNotificationToken(string token)\n{\n    // The current device receives the notification token\n    HMDebugger.LogDebug("token:"+token);\n}\n\n\nprivate void OnMessageReceive(Dictionary<string, string> data)\n{\n    // Return the custom key pair configured in the firebase background\n    foreach (var item in data)\n    {\n        HMDebugger.LogDebug("receive dataKey:"+item.Key+" dataValue:"+item.Value);\n    }\n}\n')),(0,i.kt)("p",null,"When notified by HachiMgr. Instance. OnNotificationOnMessageReceived callback receives firebase backend configuration custom key-value pairs."),(0,i.kt)("h2",{id:"multilingual-translation-interface-v356-new"},"Multilingual translation interface (v3.5.6 new)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'public enum TranslateType\n{\n    //1:Chat (cached for 1 hour)\n    //2:Other (Cache for 1 month)\n    Chat = 1,\n    Other = 2\n}\n\n\n/// <summary>\n/// Multilingual translation interface\n/// </summary>\n/// <param name="text">The text content to be translated</param>\n/// <param name="type">Type 1: Chat, 2: Others (Announcements, emails, etc.)</param>\n/// <param name="targetLang">The target language to be translated, e.g. zh-cn; ja-jp;  ko-kr;  vi-vi, etc</param>\n/// <param name="_action">Whether the translation was successful or not, true: The translation was successful, false: The translation failed; The text returns an empty string</param>\npublic void TranslateWords(string text, TranslateType type, string targetLang, Action<bool, string> _action)\n{\n    HachiMgr.Instance.TranslateText(text, type, targetLang, _action);\n}\n\n')),(0,i.kt)("h2",{id:"get-the-url-interface-for-cloud-storage-save-v401-new"},"Get the URL interface for cloud storage save (v4.0.1 new)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"/// <summary>\n/// Get the cloud storage save URL\n/// </summary>\n/// <returns></returns>\n\nvar storeUrl = HachiMgr.Instance.GetCloudStorageUrl();\n")),(0,i.kt)("h2",{id:"get-the-url-interface-for-cloud-storage-details-v401-new"},"Get the URL interface for cloud storage details (v4.0.1 new)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"/// <summary>\n/// Get the URL for cloud storage details\n/// </summary>\n/// <returns></returns>\n\nvar storeDetailUrl = HachiMgr.Instance.GetCloudStorageDetailUrl();\n")))}d.isMDXComponent=!0},4684:function(e,t,n){t.Z=n.p+"assets/images/image34-aa31226569dd2520e7593a1865e84a88.jpg"},8367:function(e,t,n){t.Z=n.p+"assets/images/image35-4871c7366f04129c248ea5abbe643c08.jpeg"}}]);