"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[463],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},v={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=l,k=p["".concat(s,".").concat(d)]||p[d]||v[d]||a;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6666:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return v}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),i=["components"],o={title:"Event Tracking",sidebar_label:"Event Tracking",description:"",sidebar_position:96},s=void 0,u={unversionedId:"events",id:"version-1.0.0/events",title:"Event Tracking",description:"",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-1.0.0/events.md",sourceDirName:".",slug:"/events",permalink:"/hachi-doc/events",tags:[],version:"1.0.0",sidebarPosition:96,frontMatter:{title:"Event Tracking",sidebar_label:"Event Tracking",description:"",sidebar_position:96},sidebar:"tutorialSidebar",previous:{title:"Native",permalink:"/hachi-doc/hc-integration/nv"},next:{title:"Remote Config",permalink:"/hachi-doc/remoteConfig"}},c={},v=[{value:"Level Progression Events",id:"level-progression-events",level:2},{value:"LevelStart",id:"levelstart",level:3},{value:"LevelEnd",id:"levelend",level:3},{value:"Set public event attributes (for TD only)",id:"set-public-event-attributes-for-td-only",level:2},{value:"Set user properties (for TD only)",id:"set-user-properties-for-td-only",level:2},{value:"User-defined event reporting",id:"user-defined-event-reporting",level:2}],p={toc:v};function d(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"level-progression-events"},"Level Progression Events"),(0,a.kt)("p",null,"Level progression events are used to track and analyze the user's level behavior in the game, Including level start, level end, etc.     "),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("b",null,(0,a.kt)("font",{color:"ff0000"},"Attention: if you have \u2018Levels\u2019 / 'Quest' / 'Task' or 'Mission' in your game, you must integrate \"Progression Events\" !")),(0,a.kt)("br",null),(0,a.kt)("p",{parentName:"div"},"Level Start Call: ",(0,a.kt)("strong",{parentName:"p"}," LevelStart "),(0,a.kt)("br",{parentName:"p"}),"\n","Level End Call: ",(0,a.kt)("strong",{parentName:"p"}," LevelEnd ")),(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},"Level has ended with succ : ",(0,a.kt)("strong",{parentName:"li"}," Level_Success ")),(0,a.kt)("li",{parentName:"ul"},"Level has ended with failed: ",(0,a.kt)("strong",{parentName:"li"}," Level_Fail ")),(0,a.kt)("li",{parentName:"ul"},"Before level end, restart level. eg. click Retry button in the current level: ",(0,a.kt)("strong",{parentName:"li"}," Level_Retry ")),(0,a.kt)("li",{parentName:"ul"},"Before level end, back to home page or level list. For example click back or quit buttons in current level: ",(0,a.kt)("strong",{parentName:"li"}," Level_Back "))))),(0,a.kt)("h3",{id:"levelstart"},"LevelStart"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'HCSDKManager.Instance.LevelEnter("1");\n\nHCSDKManager.Instance.LevelEnter(1);\n\nHCSDKManager.Instance.LevelEnter("S_1");\n')),(0,a.kt)("p",null,"Call ",(0,a.kt)("inlineCode",{parentName:"p"},"LevelEnter")," method when starting each level."),(0,a.kt)("p",null,"API: ",(0,a.kt)("br",null),"\nvoid LevelEnter(int level);",(0,a.kt)("br",{parentName:"p"}),"\n","void LevelEnter(string level);"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"Name"),(0,a.kt)("td",null,"isRequired"),(0,a.kt)("td",null,"Type"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"level"),(0,a.kt)("td",null,"Y"),(0,a.kt)("td",null,"int/string"),(0,a.kt)("td",null,"level: current level id.         ",(0,a.kt)("br",null),"You can get the specific values  \u300cLevel Progress Event Access\u300d on your game product requirement."))),(0,a.kt)("h3",{id:"levelend"},"LevelEnd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'HCSDKManager.Instance.LevelEnd("1", StageResult.Level_Success); \n\nHCSDKManager.Instance.LevelEnd(1, StageResult.Level_Success);\n\nHCSDKManager.Instance.LevelEnd("S_1", StageResult.Level_Fail);\n\nHCSDKManager.Instance.LevelEnd(3, StageResult.Level_Retry);\n\nHCSDKManager.Instance.LevelEnd("S_2", StageResult.Level_Back);\n')),(0,a.kt)("p",null,"Call ",(0,a.kt)("inlineCode",{parentName:"p"},"LevelEnd")," method when finish each level.   "),(0,a.kt)("p",null,"API:\nvoid LevelEnd(int level, StageResult stageResult);",(0,a.kt)("br",null),"\nvoid LevelEnd(string level, StageResult stageResult);"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"Name"),(0,a.kt)("td",null,"isRequired"),(0,a.kt)("td",null,"Type"),(0,a.kt)("td",null,"Description")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"level"),(0,a.kt)("td",null,"Y"),(0,a.kt)("td",null,"int/string"),(0,a.kt)("td",null,"level: current level id.         ",(0,a.kt)("br",null),"You can get the specific values  \u300cLevel Progress Event Access\u300d on your game product requirement.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"stageResult"),(0,a.kt)("td",null,"Y"),(0,a.kt)("td",null,"StageResult"),(0,a.kt)("td",null,(0,a.kt)("b",null,"Level_Success:")," Level has ended with succ   ",(0,a.kt)("br",null),(0,a.kt)("b",null,"Level_Fail:")," Level has ended with failed  ",(0,a.kt)("br",null),(0,a.kt)("b",null,"Level_Retry:")," Before level end, restart level. eg. click Retry button in the current level ",(0,a.kt)("br",null),(0,a.kt)("b",null,"Level_Back:")," Before level end, back to home page or level list. For example click back or quit buttons in current level"))),(0,a.kt)("h2",{id:"set-public-event-attributes-for-td-only"},"Set public event attributes (for TD only)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'Dictionary<string, object> superProperties = new Dictionary<string, object>();\nsuperProperties["channel"] = "ta";//String\nsuperProperties["age"] = 1;//int\nsuperProperties["isSuccess"] = true;//bool\nsuperProperties["birthday"] = DateTime.Now;//Time\nsuperProperties["object"] = new Dictionary<string, object>() { { "key", "value" } };//Object\nsuperProperties["object_arr"] = new List<object>() { new Dictionary<string, object>() { { "key", "value" } } };//Dictionary\nsuperProperties["arr"] = new List<object>() { "value" };//Array\n\nHCSDKManager.Instance.SetSuperProperties(superProperties);\n')),(0,a.kt)("h2",{id:"set-user-properties-for-td-only"},"Set user properties (for TD only)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'Dictionary<string, object> userProperties = new Dictionary<string, object>();\nuserProperties["user_name"] = "TA";\n\nHCSDKManager.Instance.SetUserProperties(userProperties);\n')),(0,a.kt)("h2",{id:"user-defined-event-reporting"},"User-defined event reporting"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'HCSDKManager.Instance.LogEvent("Event01");\n\nHCSDKManager.Instance.LogEvent("Event02", "key01","value01",TrackEventPlatform.Firebase);\n\nHCSDKManager.Instance.LogEvent("Event03", "key01", "value01", "key02", "value02",TrackEventPlatform.TD);\n\nHCSDKManager.Instance.LogEvent("Event04", new Dictionary<string, object>() { { "key01", "value01" } });\n')),(0,a.kt)("p",null,"Firebase/ TD is reported by default. If a statistical platform needs to be reported separately, use the ",(0,a.kt)("strong",{parentName:"p"},"TrackEventPlatform")," enumeration"))}d.isMDXComponent=!0}}]);